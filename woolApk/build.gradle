apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.lifefighter.wool"
        minSdkVersion 24
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_ALIAS_PASSWORD
        }
        debug {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_ALIAS_PASSWORD
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile == null) {
                return
            }
            def fileName = outputFile.name as String
            if (fileName.endsWith(".apk") && fileName.contains("release")) {
                println outputFile.name
                println variant.name
                variant.assemble.doLast {
                    if (!outputFile.exists()) {
                        println "file not exists"
                    } else {
                        project.copy {
                            from outputFile
                            into file(rootProject.projectDir.path + "/outputs")
                            rename(outputFile.name, "wool.apk")
                        }
                    }
                }
            }

        }
    }
}

dependencies {
    implementation project(":woolLibrary")
}